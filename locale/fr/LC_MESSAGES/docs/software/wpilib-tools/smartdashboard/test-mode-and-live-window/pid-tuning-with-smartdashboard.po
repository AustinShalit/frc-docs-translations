# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Regis Bekale <rbekale@robotiquefirstquebec.org>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-26 00:48-0700\n"
"PO-Revision-Date: 2020-04-25 02:08+0000\n"
"Last-Translator: Regis Bekale <rbekale@robotiquefirstquebec.org>, 2020\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/wpilib-tools/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:2
msgid "PID Tuning with SmartDashboard"
msgstr "Réglage des paramètres PID à travers le SmartDashboard"

#: ../../frc-docs/source/docs/software/wpilib-tools/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:4
msgid ""
"The PID (Proportional, Integral, Differential) is an algorithm for "
"determining the motor speed based on sensor feedback to reach a setpoint as "
"quickly as possible. For example, a robot with an elevator that moves to a "
"predetermined position should move there as fast as possible then stop "
"without excessive overshoot leading to oscillation. Getting the PID "
"controller to behave this way is called \"tuning\". The idea is  to compute "
"an error value that is the difference between the current value of the "
"mechanism feedback element and the desired (setpoint) value. In the case of "
"the arm, there might be a potentiometer connected to an analog channel that "
"provides a voltage that is proportional to the position of the arm. The "
"desired value is the voltage that is predetermined for the position the arm "
"should move to, and the current value is the voltage for the actual position"
" of the arm."
msgstr ""
"Le PID (Proportionnel, Intégral, Dérivé) est un algorithme permettant  de "
"déterminer, par exemple, la vitesse d'un moteur en se servant  d'une boucle "
"de rétroaction à partir du signal d'un capteur pour atteindre une valeur "
"désirée, la consigne, le plus rapidement possible. Ainsi, un robot avec un "
"élevateur qui se déplace vers une position prédéterminée devrait s’y rendre "
"aussi vite que possible, puis s’arrêter sans dépassement excessif conduisant"
" à une oscillation. C'est par réglage du PID de l'élevateur qu'on peut "
"arriver à ce résultat. L’idée derrière le PID est de calculer, pour un "
"paramètre donné, par exemple une position, une valeur d’erreur qui est la "
"différence entre la valeur actuelle de l’élément de rétroaction du mécanisme"
" et la valeur souhaitée (consigne). Dans le cas du bras, l'élément de "
"rétroaction peut être un potentiomètre relié à un canal analogique qui "
"fournit une tension qui est proportionnelle à la position du bras. La valeur"
" souhaitée est la tension prédéterminée du potentiomètre pour que le bras se"
" trouve à la position voulue, et la valeur actuelle est la tension "
"correspondant à la position réelle du bras au moment précis où la mesure est"
" prise."

#: ../../frc-docs/source/docs/software/wpilib-tools/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:7
msgid "Finding the setpoint values with LiveWindow"
msgstr "Détermination des valeurs des consignes avec LiveWindow"

#: ../../frc-docs/source/docs/software/wpilib-tools/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:10
msgid ""
"Create a PID Subsystem for each mechanism with feedback. The PID Subsystems "
"contain the actuator (motor) and the feedback sensor (potentiometer in this "
"case). You can use Test mode to display the subsystem sensors and actuators."
" Using the slider manually adjust the actuator to each desired position. "
"Note the sensor values (2) for each of the desired positions. These will "
"become the setpoints for the PID controller."
msgstr ""
"Créez un sous-système PID pour chaque mécanisme pourvu d'une boucle de  "
"rétroaction. Les sous-systèmes PID contiennent un actionneur (moteur) et un "
"capteur de rétroaction (potentiomètre dans le cas présent). Vous pouvez "
"utiliser le mode Test pour afficher les capteurs et actionneurs du sous-"
"système. À l’aide du curseur, ramener manuellement l’actionneur à chaque "
"position souhaitée. Notez les valeurs du capteur (2) pour chacune des "
"positions souhaitées. Celles-ci serviront de consignes pour le contrôleur "
"PID."

#: ../../frc-docs/source/docs/software/wpilib-tools/smartdashboard/test-mode-and-live-window/pid-tuning-with-smartdashboard.rst:13
msgid "Viewing the PIDController in LiveWindow"
msgstr "Affichage du PIDController dans LiveWindow"
