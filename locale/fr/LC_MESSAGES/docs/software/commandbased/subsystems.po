# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Étienne Beaulac <etienne.beaulac@outlook.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-07-16 16:07+0000\n"
"PO-Revision-Date: 2020-04-25 02:02+0000\n"
"Last-Translator: Étienne Beaulac <etienne.beaulac@outlook.com>, 2020\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:2
msgid "Subsystems"
msgstr "Les sous-systèmes"

#: ../../frc-docs/source/docs/software/commandbased/subsystems.rst:4
msgid ""
"Subsystems are the basic unit of robot organization in the command-based "
"paradigm. A subsystem is an abstraction for a collection of robot hardware "
"that *operates together as a unit*. Subsystems `encapsulate "
"<https://en.wikipedia.org/wiki/Encapsulation_(computer_programming)>`__ this"
" hardware, “hiding” it from the rest of the robot code (e.g. commands) and "
"restricting access to it except through the subsystem’s public methods. "
"Restricting the access in this way provides a single convenient place for "
"code that might otherwise be duplicated in multiple places (such as scaling "
"motor outputs or checking limit switches) if the subsystem internals were "
"exposed. It also allows changes to the specific details of how the subsystem"
" works (the “implementation”) to be isolated from the rest of robot code, "
"making it far easier to make substantial changes if/when the design "
"constraints change."
msgstr ""
"Les sous-systèmes sont l'unité de base de l'organisation d'un robot dans le "
"paradigme orienté commande. Un sous-système est une abstraction pour un "
"ensemble de composantes qui *fonctionnent ensemble comme une unité*. Les "
"sous-systèmes `encapsulent "
"<https://fr.wikipedia.org/wiki/Encapsulation_(programmation)>`__ ces "
"composantes : ils les « cachent » du reste du code du robot (par exemple, "
"les commandes) et limitent l'accès à celles-ci, sauf par les méthodes "
"publiques du sous-système. Restreindre ainsi l'accès permet d'avoir un "
"endroit pratique où écrire certains bouts de code (comme la mise à l'échelle"
" des valeurs de sortie des moteurs ou la vérification des interrupteurs de "
"fin de course) qui pourraient autrement être dupliqués à plusieurs endroits "
"si les éléments internes du sous-système étaient accessibles. Cela permet "
"aussi d'isoler du reste du programme les modifications qui peuvent être "
"apportées aux détails spécifiques de fonctionnement du sous-système "
"(l'implémentation). Cela facilite grandement les modifications "
"substantielles si (ou plutôt quand) les contraintes de conception changent."
