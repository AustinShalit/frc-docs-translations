# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Étienne Beaulac <etienne.beaulac@outlook.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-06-26 00:48-0700\n"
"PO-Revision-Date: 2020-04-25 02:02+0000\n"
"Last-Translator: Étienne Beaulac <etienne.beaulac@outlook.com>, 2020\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:2
msgid "What Is \"Command-Based\" Programming?"
msgstr "Qu’est-ce que la programmation « orientée commande » ?"

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:4
msgid ""
"WPILib supports a robot programming methodology called “command-based” "
"programming. In general, “command-based” can refer both the general "
"programming paradigm, and to the set of WPILib library resources included to"
" facilitate it."
msgstr ""
"WPILib supporte une méthodologie de programmation robot appelée "
"programmation « orientée commande. » L'expression « orientée commande » peut"
" faire référence à la fois au paradigme général de programmation et à "
"l'ensemble des fonctionnalités incluses dans WPILib afin de faciliter "
"l'utilisation de ce paradigme. "

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:6
msgid ""
"“Command-based” programming is an example of what is known as a `design "
"pattern. <https://en.wikipedia.org/wiki/Design_pattern>`__ It is a general "
"way of organizing one’s robot code that is well-suited to a particular "
"problem-space. It is not the only way to write a robot program, but it is a "
"very effective one; command-based robot code tends to be clean, extensible, "
"and (with some tricks) easy to re-use from year to year."
msgstr ""
"La programmation « orientée commande » est un exemple de ce que l’on appelle"
" un `patron de conception "
"<https://fr.wikipedia.org/wiki/Patron_de_conception>`__. C’est une méthode "
"générale d’organiser le code de son robot qui est bien adaptée à une "
"problématique spécifique. Il ne s’agit pas de la seule façon d’écrire le "
"programme d’un robot, mais c’est une méthode très efficace : un programme « "
"orienté commande » a tendance à être plus clair, extensible et (avec "
"quelques astuces) facile à réutiliser d’année en année."

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:8
msgid ""
"The command-based paradigm is also an example of what is known as "
"`declarative <https://en.wikipedia.org/wiki/Declarative_programming>`__ "
"programming. In declarative programming, the emphasis is placed on *what* "
"the program ought to do, rather than *how* the program ought to do it. Thus,"
" the command-based libraries allow users to define desired robot behaviors "
"while minimizing the amount of iteration-by-iteration robot logic that they "
"must write. For example, in a command-based program, a user can specify that"
" “the robot should perform an action when a button is pressed” (note the use"
" of a :ref:`lambda <docs/software/commandbased/convenience-features:Lambda "
"Expressions (Java)>`):"
msgstr ""
"Le paradigme orienté commande est également un exemple de ce que l'on "
"appelle la `programmation déclarative "
"<https://fr.wikipedia.org/wiki/Programmation_d%C3%A9clarative>`__. En "
"programmation déclarative, l'accent est mis sur ce que le programme doit "
"faire, et non sur comment il doit le faire. Ainsi, les bibliothèques "
"orientées commande permettent aux utilisateurs de définir les comportements "
"du robot tout en minimisant la quantité de code à écrire pour gérer la "
"logique d'itération en itération du programme. Par exemple, dans un "
"programme orienté commande, l'utilisateur peut spécifier que « le robot doit"
" effectuer une action lorsqu'un bouton est appuyé » (remarquez l'utilisation"
" d'une :ref:`expression lambda <docs/software/commandbased/convenience-"
"features:Lambda Expressions (Java)>`):"

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:20
msgid ""
"In contrast, in an ordinary `imperative "
"<https://en.wikipedia.org/wiki/Imperative_programming>`__ program, the user "
"would need to check the button state every iteration, and perform the "
"appropriate action based on the state of the button."
msgstr ""
"En revanche, dans un programme `impératif "
"<https://fr.wikipedia.org/wiki/Programmation_imp%C3%A9rative>`__ classique, "
"l'utilisateur devrait vérifier l'état du bouton à chaque itération, et "
"effectuer l'action appropriée en fonction de l'état du bouton."

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:47
msgid "Subsystems and Commands"
msgstr "Sous-systèmes et commandes"

#: ../../frc-docs/source/docs/software/commandbased/what-is-command-based.rst:52
msgid ""
"The command-based pattern is based around two core abstractions: "
"**commands**, and **subsystems.**"
msgstr ""
"Le patron orienté commande repose sur deux abstractions fondamentales : les "
"**commandes** et les **sous-systèmes**."
