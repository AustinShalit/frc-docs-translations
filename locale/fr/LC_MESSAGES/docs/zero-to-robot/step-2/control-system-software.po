# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Austin Shalit <austinshalit@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-14 04:13+0000\n"
"PO-Revision-Date: 2020-10-08 04:19+0000\n"
"Last-Translator: Austin Shalit <austinshalit@gmail.com>, 2020\n"
"Language-Team: French (Canada) (https://www.transifex.com/wpilib/teams/109324/fr_CA/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: fr_CA\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:2
msgid "FRC Software Component Overview"
msgstr "Survol des composants logiciels FRC"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:4
msgid ""
"The FRC control system consists of a wide variety of mandatory and optional "
"software components. These elements are designed to assist you in the "
"design, development, and debugging of your robot code as well as assist with"
" control robot operation and to provide feedback when troubleshooting. For "
"each software component this document will provide a brief overview of its "
"purpose, a link to the package download, if appropriate, and a link to "
"further documentation where available."
msgstr ""
"Le système de contrôle FRC se compose d'une grande variété de composants "
"logiciels obligatoires et facultatifs. Ces éléments ont été conçus  avec "
"pour objectif de vous aider dans la conception, le développement, et le "
"débogage de votre code de robot, mais aussi pour vous assister pendant "
"l'opération du robot et pour fournir des informations lors du dépannage. "
"Pour chaque composant logiciel ce document fournira  un survol de son objet,"
" un lien pour le téléchargement du package, le cas échéant, et un lien vers "
"d'autres documents lorsqu'il en existe."

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:7
msgid "Operating System Compatibility"
msgstr "Compatibilité du système d'exploitation"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:9
msgid ""
"The primary supported OS for FRC components is Windows. All required FRC "
"software components have been tested on Windows 7, 8, and 10. Windows XP is "
"not supported."
msgstr ""
"Le principal système d'exploitation pris en charge pour les composants FRC "
"est Windows. Tous les composants logiciels de FRC ont été testés sur Windows"
" 7, 8 et 10. Windows XP n'est pas pris en charge. "

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:11
msgid ""
"Having said that, many of the tools for C++/Java programming are also "
"supported and tested on macOS and Linux. Teams programming in C++/Java "
"should be able to develop using these systems, using a Windows system for "
"the Windows-only operations such as Driver Station, radio programming, and "
"roboRIO imaging."
msgstr ""
"Ceci dit, beaucoup d'outils relatifs à la programmation C++/Java sont aussi "
"pris en charge et testés sous macOS et Linux. Les équipes qui programment en"
" C++/Java devraient pouvoir développer en utilisant ces outils, en utilisant"
" un système Windows pour les opérations Windows uniquement telles que "
"l'application Driver Station, la programmation de la radio et l'installation"
" de l'image du roboRIO."

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:14
msgid "LabVIEW FRC (Windows Only)"
msgstr "LabVIEW FRC (Windows seulement)"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:21
msgid "FRC Robot Simulator (Windows Only)"
msgstr "Simulateur de Robot FRC (Windows Seulement)"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:25
msgid ""
"The FRC Robot Simulator is a component of the LabVIEW programming "
"environment that allows you to operate a predefined robot in a simulated "
"environment to test code and/or Driver Station functions. It utilizes a "
"LabVIEW code project as the robot code and communicates with the FRC Driver "
"Station for robot control and the FRC Default Dashboard for robot feedback. "
"The FRC Robot Simulator is installed with the LabVIEW FRC package. "
"Information on using the FRC Robot Simulator can be found by opening the "
"Robot Simulation Readme.html file in the LabVIEW Project Explorer."
msgstr ""
"Le Simulateur de Robot FRC est un composant de l'environnement de "
"développement LabVIEW qui vous permet de faire fonctionner un robot "
"prédéfini dans un environnement simulé pour tester du code ou des fonctions "
"de la Driver Station. Il utilise un projet codé en LabVIEW comme code de "
"robot et communique avec la Driver Station pour le contrôle du robot et avec"
" le Dashboard par défaut FRC pour l'affichage des informations du robot. Le "
"Simulateur de Robot FRC est installé avec le package LabVIEW FRC. On peut "
"obtenir plus d'informations sur l'utilisation du Simulateur de Robot FRC en "
"ouvrant le fichier Readme.html du Simulation de Robot dans l'explorateur de "
"projets LabVIEW."

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:28
msgid "Visual Studio Code"
msgstr "Visual Studio Code"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:35
msgid "FRC Driver Station Powered by NI LabVIEW (Windows Only)"
msgstr "FRC Driver Station par NI LabVIEW (Windows seulement)"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:42
msgid "FRC LabVIEW Dashboard (Windows Only)"
msgstr "Dashboard FRC LabVIEW (Windows Seulement)"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:49
msgid "SmartDashboard"
msgstr "SmartDashboard"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:53
msgid ""
"SmartDashboard is an alternate dashboard application written in Java. "
"SmartDashboard automatically creates a widget for each variable sent from "
"the Robot sent using the SmartDashboard class or VIs. These widgets can be "
"configured to a number of preset display types, or users can create custom "
"extensions in Java. Vision extensions are available for the SmartDashboard "
"which allow it to display images from the Axis camera on the robot. "
"SmartDashboard is included in the C++ and Java language updates (enabled by "
"clicking the C++ or Java buttons respectively on the Setup tab of the Driver"
" Station). Additional documentation on SmartDashboard can be found "
":ref:`here <docs/software/wpilib-"
"tools/smartdashboard/index:SmartDashboard>`."
msgstr ""
"SmartDashboard est une application de tableau de bord alternative écrite en "
"Java. L'application SmartDashboard crée automatiquement un widget relatif à "
"chaque variable envoyée par le robot en utilisant la classe SmartDashboard "
"ou les VIs. Ces widgets peuvent être configurées selon certains types "
"d'affichage prédéfinis ou selon des extensions personnalisées en Java. Des "
"extensions pour la vision sont disponibles pour le SmartDashboard qui lui "
"permettent d'afficher des images d'une caméra Axis sur le robot. Le "
"SmartDashboard est intégré dans les mises à jour des langages de "
"programmation  C++ et Java (activé en cliquant sur le bouton C++ ou Java "
"respectivement sur l'onglet de configuration du Driver Station). De la "
"documentation supplémentaire pour SmartDashboard peut être trouvée :ref:`ici"
" <docs/software/wpilib-tools/smartdashboard/index:SmartDashboard>`."

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:56
msgid "LiveWindow"
msgstr "LiveWindow"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:60
msgid ""
"LiveWindow is a mode of SmartDashboard , designed for use with the Test Mode"
" of the Driver Station. LiveWindow allows the user to see feedback from "
"sensors on the robot and control actuators independent of the written user "
"code. More information about LiveWindow can be found :ref:`here "
"<docs/software/wpilib-tools/smartdashboard/test-mode-and-live-"
"window/index:SmartDashboard: Test Mode and Live Window>`."
msgstr ""
"LiveWindow est un mode de SmartDashboard conçu pour être utilisé avec le "
"mode Test de l'application Driver Station. LiveWindow permet à l'utilisateur"
" de voir les données des capteurs sur le robot et de contrôler les "
"mécanismes indépendamment du code écrit. Plus d'informations à propos de "
"LiveWindow peuvent être trouvées :ref:`ici <docs/software/wpilib-"
"tools/smartdashboard/test-mode-and-live-window/index:SmartDashboard: Test "
"Mode and Live Window>`."

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:63
msgid "Shuffleboard"
msgstr "Shuffleboard"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:67
msgid ""
"Shuffleboard is an alternative dashboard application written in Java. It "
"takes many of the concepts from SmartDashboard such as automatic adding of "
"widgets and adds new features including better layout control and "
"record/playback functionality. Shuffleboard contains all of the basic widget"
" types found in the SmartDashboard as well as a number of new ones intended "
"to make visualizing specific robot components even easier. It has full "
"integration with WPILib’s “cscore” for displaying, recording, and playing "
"back camera streams. Shuffleboard is included in the C++ and Java language "
"updates (enabled by selecting Shuffleboard from the dashboard type on the "
"Setup tab of the Driver Station or by launching it from the WPILib start "
"tool menu in Visual Studio Code). Additional documentation on Shuffleboard "
"can be found :ref:`here <docs/software/wpilib-"
"tools/shuffleboard/index:Shuffleboard>`."
msgstr ""
"Shuffleboard est une application de tableau de bord alternative écrite en "
"Java. Cette application reprend de nombreux concepts de l'application "
"SmartDashboard, comme l'ajout automatique de widgets, et ajoute de nouvelles"
" fonctions comme un meilleur contrôle de la disposition des widgets et la "
"possibilité d'enregistrer et de rejouer des ensembles de données. "
"Shuffleboard comprend tous les widgets de base trouvés dans le "
"SmartDashboard ainsi qu'un certain nombre de nouveaux widgets destinés à "
"rendre la visualisation de composants spécifiques du robot encore plus "
"facile. Il a une intégration complète avec \"cscore\" de WPILib pour "
"l'affichage, l'enregistrement et la lecture des flux de caméras. "
"Shuffleboard est intégré dans les mises à jour des langages de programmation"
" C++ et Java (activé par la sélection de Shuffleboard dans le type de "
"tableau de bord sur l'onglet de configuration du Driver Station, ou par son "
"lancement avec l'outil de démarrage WPILib en Visual Studio Code). De la "
"documentation additionnelle sur Shuffleboard peut être trouvée :ref:`ici "
"<docs/software/wpilib-tools/shuffleboard/index:Shuffleboard>`."

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:70
msgid "FRC roboRIO Imaging Tool (Windows Only)"
msgstr "Outil d'installation d'image roboRIO FRC (Windows Seulement)"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:77
msgid "Setup Axis Camera (Windows Only)"
msgstr "Configuration de la Caméra Axis (Windows Seulement)"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:81
msgid ""
"The Setup Axis Camera utility is a LabVIEW program used to configure an Axis"
" 206, M1011 or M1013 camera for use on the robot. The tool takes a factory "
"reset camera connected directly to the computer and configures the IP, "
"username and password, anonymous access, and default framerate and "
"compression (for use with the SmartDashboard or other access methods). The "
"Setup Axis Camera tool is installed as part of the FRC Game Tools."
msgstr ""
"L'utilitaire de Configuration de la Caméra Axis est un logiciel utilisé pour"
" configurer une caméra Axis 206, M1011 ou M1013 pour l'utilisation sur le "
"robot. L'utilitaire prend une caméra réinitialisée à sa configuration par "
"défaut connectée directement à l'ordinateur et configure l'adresse IP, le "
"nom d'utilisateur et le mot de passe, l'accès anonyme, le taux de "
"raffraîchissement et la compression de défaut (pour une utilisation avec le "
"SmartDashboard ou d'autre méthodes d'accès). L'outil de Configuration de "
"Caméra Axis est installé en tant qu'élément des Outils de Jeu FRC."

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:84
msgid "FRC Driver Station Log Viewer (Windows Only)"
msgstr "Visionneur de Journaux de la Driver Station FRC (Windows Seulement)"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:91
msgid "RobotBuilder"
msgstr "RobotBuilder"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:95
msgid ""
"RobotBuilder is a tool designed to aid in setup and structuring of a Command"
" Based robot project for C++ or Java. RobotBuilder allows you to enter in "
"the various components of your robot subsystems and operator interface and "
"define what your commands are in a graphical tree structure. RobotBuilder "
"will then verify that you have no port allocation conflicts and can generate"
" a wiring table indicating what is connected to each port as well as C++ or "
"Java code. The code created generates the appropriate files, constructs the "
"appropriate objects and adds LiveWindow code for each sensor and actuator, "
"but does not write any of the actual Subsystem or Command methods. The user "
"must write the appropriate code for these methods for the robot to function."
" More information about RobotBuilder can be found :ref:`here <docs/software"
"/wpilib-tools/robotbuilder/index:RobotBuilder>`. More information about the "
"Command Based programming architecture can be found :ref:`here "
"<docs/software/commandbased/index:Command-Based Programming>`."
msgstr ""
"RobotBuilder est un outil conçu pour vous aider avec la configuration et la "
"structuration d'un projet de robot orienté commande en C++ ou Java. "
"RobotBuilder vous permet de rentrer les différents composants des sous-"
"systèmes de votre robot, l'interface opérateur et définir quelles sont vos "
"commandes dans une structure aborescente graphique. RobotBuilder vérifiera "
"ensuite que vous n'avez aucun conflit d'allocation de port et peut produire "
"une table de câblage indiquant ce qui est connecté à chaque port ainsi que "
"du code en C++ ou Java. Le code crée génère les fichiers appropriés, "
"construit les objets appropriés et ajoute du code LiveWindow pour chaque "
"capteur et actionneur, cependant il n'écrit pas les méthodes réelles pour "
"les sous-systèmes ou les commandes. L'utilisateur doit écrire le code "
"approprié pour ces méthodes afin que le robot fonctionne. Des informations "
"supplémentaires à propos de RobotBuilder peuvent être trouvées :ref:`ici "
"<docs/software/wpilib-tools/robotbuilder/index:RobotBuilder>`. D'autres "
"informations à propos de l'architecture de programmation orientée commande "
"peuvent être trouvées :ref:`ici <docs/software/commandbased/index:Command-"
"Based Programming>`."

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:98
msgid "OutlineViewer"
msgstr "OutlineViewer"

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:102
msgid ""
"OutlineViewer is a utility used to view, modify and add to the contents of "
"the NetworkTables for debugging purposes. It displays all key value pairs "
"currently in the NetworkTables and can be used to modify the value of "
"existing keys or add new keys to the table. OutlineViewer is included in the"
" C++ and Java language updates (found in ``\\tools\\wpilib``). Teams may "
"need to install the Java Runtime Environment to use the OutlineViewer on "
"computers not set up for Java programming."
msgstr ""
"OutlineViewer est un utilitaire utilisé pour afficher, modifier et ajouter "
"au contenu des NetworkTables à des fins de débogage. Il affiche toutes les "
"paires valeurs et clés associées actuellement dans les NetworkTables et peut"
" être utilisé pour modifier la valeur des clés existantes ou ajouter de "
"nouvelles clés à la table. OutlineViewer est intégré dans les mises à jour "
"en langage C++ et Java (localisées dans ``\\tools\\wpilib``). Les équipes "
"devront installer l’environnement d’exécution Java afin d'utiliser le "
"OutlineViewer sur les ordinateurs qui ne sont pas configurés pour la "
"programmation en Java."

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:104
msgid ""
"To connect to your robot, open OutlineViewer and set the “Server Location” "
"to be your team number. After you click start, OutlineViewer will connect."
msgstr ""
"Pour connecter OutlineViewer à votre robot, ouvrez OutlineViewer et "
"configurez le \"Server Location\" avec votre numéro d'équipe comme valeur. "
"Ensuite, cliquez sur Start, OutlineViewer se connectera."

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:106
msgid ""
"LabVIEW teams can use the Variables tab of the LabVIEW Dashboard to "
"accomplish this functionality."
msgstr ""
"Les équipes LabVIEW peuvent utiliser l'onglet Variables du Dashboard LabVIEW"
" pour accomplir cette fonctionnalité."

#: ../../frc-docs/source/docs/zero-to-robot/step-2/control-system-software.rst:109
msgid "FRC Radio Configuration Utility (Windows Only)"
msgstr "Utilitaire de Configuration de Radio FRC (Windows Seulement)"
