# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Duru Ünlü <aodunlu@gmail.com>, 2020
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-07 04:13+0000\n"
"PO-Revision-Date: 2020-04-25 02:01+0000\n"
"Last-Translator: Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/actuators/pwm-controllers.rst:4
msgid "PWM Speed Controllers in Depth"
msgstr "Detaylı PWM Hız Kontrolörleri"

#: ../../frc-docs/source/docs/software/actuators/pwm-controllers.rst:6
msgid ""
"WPILib has extensive support for motor control. There are a number of "
"classes that represent different types of speed controllers and servos.  "
"There are currently two classes of speed controllers, PWM based motor "
"controllers and CAN based motor controllers. WPILib also contains composite "
"classes (like DifferentialDrive) which allow you to control multiple motors "
"with a single object. This article will cover the details of PWM motor "
"controllers; CAN controllers and composite classes will be covered in "
"separate articles."
msgstr ""
"WPILib, motor sürücüleri için kapsamlı desteğe sahiptir. Farklı hız "
"kontrolörleri ve servoları temsil eden birkaç sınıf vardır. Şu anda iki "
"sınıf hız kontrol cihazı vardır, bunlar PWM tabanlı motor kontrolörleri ve "
"CAN tabanlı motor kontrolörleridir. WPILib ayrıca, tek bir nesne ile birden "
"çok motoru kontrol etmenize olanak tanıyan bileşik sınıflar "
"(DifferentialDrive gibi) içerir. Bu makale PWM motor sürücülerinin "
"ayrıntılarını kapsayacaktır; CAN denetleyicileri ve bileşik sınıflar ayrı "
"makalelerde ele alınacaktır."

#: ../../frc-docs/source/docs/software/actuators/pwm-controllers.rst:9
msgid "PWM Controllers, brief theory of operation"
msgstr "PWM Kontrolörleri, Kısa Çalışma Teorisi"

#: ../../frc-docs/source/docs/software/actuators/pwm-controllers.rst:13
msgid ""
"The PWM signal the controllers use for an input is a little bit different. "
"Even at the bounds of the signal range (max forward or max reverse) the "
"signal never approaches a duty cycle of 0% or 100%. Instead the controllers "
"use a signal with a period of either 5ms or 10ms and a midpoint pulse width "
"of 1.5ms. Many of the controllers use the typical hobby RC controller timing"
" of 1ms to 2ms."
msgstr ""
"Denetleyicilerin bir giriş için kullandığı PWM sinyali biraz farklıdır. "
"Sinyal aralığının sınırlarında bile (maksimum ileri veya maksimum geri) "
"sinyal hiçbir zaman %0 veya % 100'lük bir görev döngüsüne yaklaşmaz. Bunun "
"yerine kontrolörler 5ms veya 10ms periyotlu ve 1.5ms orta nokta darbe "
"genişliğine sahip bir sinyal kullanır. Denetleyicilerin çoğu, 1 ms ila 2 ms "
"arasındaki tipik hobi RC denetleyici zamanlamasını kullanır."

#: ../../frc-docs/source/docs/software/actuators/pwm-controllers.rst:16
msgid "Raw vs Scaled output values"
msgstr "Ham ve Ölçeklenmiş Çıktı Değerleri Karşılaştırması"

#: ../../frc-docs/source/docs/software/actuators/pwm-controllers.rst:18
msgid ""
"In general, all of the motor controller classes in WPILib take a scaled -1.0"
" to 1.0 value as the output to an actuator. The PWM module in the FPGA on "
"the roboRIO is capable of generating PWM signals with periods of 5, 10, or "
"20ms and can vary the pulse width in 2000 steps of ~.001ms each around the "
"midpoint (1000 steps in each direction around the midpoint). The raw values "
"sent to this module are in this 0-2000 range with 0 being a special case "
"which holds the signal low (disabled). The class for each motor controller "
"contains information about what the typical bound values (min, max and each "
"side of the deadband) are as well as the typical midpoint. WPILib can then "
"use these values to map the scaled value into the proper range for the motor"
" controller. This allows for the code to switch seamlessly between different"
" types of controllers and abstracts out the details of the specific "
"signaling."
msgstr ""
"Genel olarak, WPILib'deki tüm motor kontrol cihazı sınıfları, bir aktüatöre "
"çıkış olarak -1.0 ila 1.0 ölçeklenmiş bir değer alır. RoboRIO'daki FPGA'daki"
" PWM modülü, 5, 10 veya 20 ms'lik periyotlarla PWM sinyalleri oluşturabilir "
"ve darbe genişliğini, orta nokta çevresinde her biri ~0,001 ms'lik 2000 "
"adımda (orta nokta çevresinde her yönde 1000 adım) değiştirebilir. Bu modüle"
" gönderilen ham değerler bu 0-2000 aralığındadır ve 0, sinyali düşük (devre "
"dışı) tutan özel bir durumdur. Her bir motor kontrol cihazının sınıfı, tipik"
" sınır değerlerinin (minimum, maksimum ve ölü bandın her bir tarafı) ve "
"tipik orta nokta hakkında bilgi içerir. WPILib, ölçeklendirilmiş değeri "
"motor kontrolörü için uygun aralıkta eşlemek için bu değerleri kullanabilir."
" Bu, kodun farklı tipteki kontrolörler arasında sorunsuz bir şekilde geçiş "
"yapmasına izin verir ve belirli sinyalizasyonun ayrıntılarını özetler."

#: ../../frc-docs/source/docs/software/actuators/pwm-controllers.rst:21
msgid "Calibrating Speed Controllers"
msgstr "Hız Kontrol Cihazlarını Kalibre Etme"

#: ../../frc-docs/source/docs/software/actuators/pwm-controllers.rst:23
msgid ""
"So if WPILib handles all this scaling, why would you ever need to calibrate "
"your speed controller? The values WPILib uses for scaling are approximate "
"based on measurement of a number of samples of each controller type. Due to "
"a variety of factors, the timing of an individual speed controller may vary "
"slightly. In order to definitively eliminate \"humming\" (midpoint signal "
"interpreted as slight movement in one direction) and drive the controller "
"all the way to each extreme, calibrating the controllers is still "
"recommended. In general, the calibration procedure for each controller "
"involves putting the controller into calibration mode then driving the input"
" signal to each extreme, then back to the midpoint. For examples on how to "
"use these speed controllers in your code, see :doc:`Using Motor Controllers "
"in Code/Using PWM Speed Controllers <using-speed-controllers>`"
msgstr ""
"Öyleyse, WPILib tüm bu ölçeklendirmenin üstesinden geliyorsa, neden hız "
"kontrol cihazınızı kalibre etmeniz gereksin? WPILib'in ölçeklendirme için "
"kullandığı değerler, her bir kontrolör tipinden birkaç örneğin ölçümüne "
"dayalı olarak yaklaşık değerlerdir. Çeşitli faktörlerden dolayı, bağımsız "
"bir hız kontrol cihazının zamanlaması biraz değişebilir. Uğultuyu (orta "
"nokta sinyali bir yönde hafif hareket olarak yorumlanır) kesin olarak "
"ortadan kaldırmak ve denetleyiciyi her uç noktaya kadar sürmek için, "
"denetleyicilerin kalibre edilmesi yine de önerilir. Genel olarak, her bir "
"kontrol cihazı için kalibrasyon prosedürü, kontrol cihazını kalibrasyon "
"moduna getirmeyi ve ardından giriş sinyalini her bir uç noktaya, ardından "
"tekrar orta noktaya sürmeyi içerir. Bu hız kontrol cihazlarını kodunuzda "
"nasıl kullanacağınıza ilişkin örnekler için bkz :doc:`Kod içinde motor "
"sürücüleri kullanma/PWM Hız kontrollerini kullanma<using-speed-controllers>`"
