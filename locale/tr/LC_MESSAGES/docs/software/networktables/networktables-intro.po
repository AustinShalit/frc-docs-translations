# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-17 04:14+0000\n"
"PO-Revision-Date: 2020-04-25 02:04+0000\n"
"Last-Translator: Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:2
msgid "What is NetworkTables"
msgstr "NetworkTables nedir"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:4
msgid ""
"NetworkTables is an implementation of a distributed \"dictionary\". That is "
"named values are created either on the robot, driver station, or potentially"
" an attached coprocessor, and the values are automatically distributed to "
"all the other participants. For example, a driver station laptop might "
"receive camera images over the network, perform some vision processing "
"algorithm, and come up with some values to sent back to the robot. The "
"values might be an X, Y, and Distance. By writing these results to "
"NetworkTable values called \"X\", \"Y\", and \"Distance\" they can be read "
"by the robot shortly after being written. Then the robot can act upon them."
msgstr ""
"NetworkTables, payaştırılmı bir \"sözlük\" uygulamasıdır. Bu adlandırılmış "
"değerler, robotta, sürücü istasyonunda veya potansiyel olarak bağlı bir "
"yardımcı işlemcide oluşturulur ve değerler otomatik olarak diğer tüm "
"katılımcılara dağıtılır. Örneğin, bir sürücü istasyonu dizüstü bilgisayarı, "
"kamera görüntülerini ağ üzerinden alabilir, bazı görüntü işleme "
"algoritmaları gerçekleştirebilir ve robota geri gönderilecek bazı değerler "
"bulabilir. Değerler bir X, Y ve Mesafe olabilir. Bu sonuçlar \"X\", \"Y\" ve"
" \"Distance\" olarak adlandırılan NetworkTable değerlerine yazıldığında, "
"robot tarafından yazıldıktan kısa bir süre sonra okunabilir. Daha sonra "
"robot onlara göre hareket edebilir."

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:6
msgid ""
"NetworkTables can be used by programs on the robot in either C++, Java or "
"LabVIEW and is built into each version of WPILib."
msgstr ""
"NetworkTables, C++, Java veya LabVIEW'deki robot üzerindeki programlar "
"tarafından kullanılabilir ve WPILib'in her sürümünde yerleşik olarak "
"bulunur."

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:9
msgid "Network tables organization"
msgstr "Ağ tabloları-Network Table organizasyonu"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:11
msgid ""
"Data is organized in NetworkTables in a hierarchy much like a directory on "
"disk with folders and files. For any instance of NetworkTables there can be "
"multiple values and subtables that may be nested in whatever way fits the "
"data organization desired. Subtables actually are represented as a long key "
"with slashes (/) separating the nested subtable and value key names. Each "
"value has a key associated with it that is used to retrieve the value. For "
"example, you might have a table called **datatable** as shown in the "
"following examples. Within a **datatable** there are two keys, X and Y and "
"their associated values. The OutlineViewer is a good utility for exploring "
"the values stored in NetworkTables while a program is running."
msgstr ""
"Veriler, Ağ Tablolarında, diskteki klasörler ve dosyalar içeren bir dizine "
"çok benzer bir hiyerarşi içinde düzenlenir. NetworkTables'ın herhangi bir "
"örneği için, istenen veri organizasyonuna uyan herhangi bir şekilde iç içe "
"geçmiş olabilen birden çok değer ve alt tablo olabilir. Alt tablolar aslında"
" iç içe geçmiş alt tabloyu ve değer anahtar adlarını ayıran eğik çizgi (/) "
"ile uzun bir anahtar olarak temsil edilir. Her değerin, değeri almak için "
"kullanılan kendisiyle ilişkili bir anahtarı vardır. Örneğin, aşağıdaki "
"örneklerde gösterildiği gibi **datatable** adlı bir tablonuz olabilir. Bir "
"**datatable** içinde iki anahtar, X ve Y ve bunlarla ilişkili değerler "
"vardır. OutlineViewer, bir program çalışırken NetworkTables'da depolanan "
"değerleri keşfetmek için iyi bir yardımcı programdır."

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:13
msgid ""
"Data types for NetworkTables are either boolean, numeric, or string. Numeric"
" values are written as double precision values. In addition you can have "
"arrays of any of those types to ensure that multiple data items are "
"delivered consistently. There is also the option of storing raw data which "
"can be used for representing structured data."
msgstr ""
"Ağ Tabloları için veri türleri boolen, numaric veya dizedir. Sayısal "
"değerler çift duyarlıklı değerler olarak yazılır. Ek olarak, birden çok veri"
" öğesinin tutarlı bir şekilde teslim edilmesini sağlamak için bu türlerden "
"herhangi bir diziye sahip olabilirsiniz. Yapılandırılmış verileri temsil "
"etmek için kullanılabilen ham verileri saklama seçeneği de vardır."

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:15
msgid ""
"There are some default tables that are created automatically when the "
"program starts up:"
msgstr ""
"Program başladığında otomatik olarak oluşturulan bazı varsayılan tablolar "
"vardır:"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:18
msgid "Table name"
msgstr "Tablo ismi"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:18
msgid "Use"
msgstr "Kullanım"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:20
msgid "/SmartDashboard"
msgstr "/SmartDashboard"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:20
msgid ""
"Used to store values written to the SmartDashboard or Shuffleboard using the"
" ``SmartDashboard.put()`` set of methods."
msgstr ""
"``SmartDashboard.put()`` yöntem kümesi kullanılarak SmartDashboard veya "
"Shuffleboard'a yazılan değerleri depolamak için kullanılır."

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:27
msgid "/LiveWindow"
msgstr "/LiveWindow"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:27
msgid ""
"Used to store Test mode (Test on the Driver Station) values. Typically these"
" are Subsystems and the associated sensors and actuators."
msgstr ""
"Test modu (Sürücü İstasyonunda Test) değerlerini saklamak için kullanılır. "
"Tipik olarak bunlar Alt sistemler ve ilgili sensörler ve aktüatörlerdir."

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:35
msgid "/FMSInfo"
msgstr "/FMSInfo"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:35
msgid ""
"Information about the currently running match that comes from the Driver "
"Station and the Field Management System"
msgstr ""
"Driver Station ve Saha Yönetim Sisteminden gelen şu anda devam eden maç "
"hakkında bilgiler"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:43
msgid "Writing a simple NetworkTable program"
msgstr "Basit bir NetworkTable programı yazma"

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:45
msgid ""
"The NetworkTables classes are instantiated automatically when your program "
"starts. To access the instance of NetworkTables do call methods to read and "
"write the getDefault() method can be used to get the default instance."
msgstr ""
"NetworkTables class, programınız başladığında otomatik olarak başlatılır. "
"NetworkTables örneğine erişmek için, varsayılan örneği almak için "
"getDefault() yöntemini okuma ve yazma yöntemlerini çağırın."

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:126
msgid ""
"The values for X and Y can be easily viewed using the OutlineViewer program "
"that shows the NetworkTables hierarchy and all the values associated with "
"each key."
msgstr ""
"X ve Y değerleri, NetworkTables hiyerarşisini ve her bir anahtarla ilişkili "
"tüm değerleri gösteren OutlineViewer programı kullanılarak kolayca "
"görüntülenebilir."

#: ../../frc-docs/source/docs/software/networktables/networktables-intro.rst:128
msgid ""
"Actually network tables has a flat namespace for the keys. Having tables and"
" subtables is an abstraction to make it easier to organize your data. So for"
" a table called \"SmartDashboard\" and a key named \"xValue\", it is really "
"a single key called \"/SmartDashboard/xValue\". The hierarchy is not "
"actually represented in the distributed data, only keys with prefixes that "
"are the contained table."
msgstr ""
"Aslında ağ tablolarının anahtarlar için düz bir ad alanı vardır. Tablolara "
"ve alt tablolara sahip olmak, verilerinizi düzenlemeyi kolaylaştırmak için "
"bir soyutlamadır. Dolayısıyla, \"SmartDashboard\" adlı bir tablo ve "
"\"xValue\" adlı bir anahtar için, gerçekten \"/SmartDashboard/xValue\" "
"adında tek bir anahtardır. Hiyerarşi, gerçekte dağıtılmış verilerde temsil "
"edilmez, yalnızca içerilen tablo olan öneklere sahip anahtarlar."
