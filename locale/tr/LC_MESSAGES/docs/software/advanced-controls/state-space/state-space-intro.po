# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Hasan Bilgin <hasanbilgin@fikretyukselfoundation.org>, 2020
# Esra özemre <esra.ozemre@tfo.k12.tr>, 2020
# Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-28 04:22+0000\n"
"PO-Revision-Date: 2020-10-04 04:16+0000\n"
"Last-Translator: Müfit ALKAYA <mufit.alkaya@tfo.k12.tr>, 2020\n"
"Language-Team: Turkish (Turkey) (https://www.transifex.com/wpilib/teams/109324/tr_TR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: tr_TR\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:4
msgid "Introduction to State-Space Control"
msgstr "Durum Uzayı - State-space Kontrolüne Giriş"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:6
msgid ""
"This article is from `Controls Engineering in FRC\\ |reg| "
"<https://file.tavsys.net/control/controls-engineering-in-frc.pdf>`__ by "
"Tyler Veness with permission."
msgstr ""
"Bu makale Tyler Veness izniyle yayınlanmaktadır:  `FRC'de Kontrol "
"Mühendisliği \\ | reg | <https://file.tavsys.net/control/controls-"
"engineering-in-frc.pdf> `_"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:9
msgid "From PID to Model-Based Control"
msgstr "PID'den Model Tabanlı-Model-Based Kontrol"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:11
msgid ""
"When tuning PID controllers, we focus on fiddling with controller parameters"
" relating to the current, past, and future :term:`error` (P, I and D terms) "
"rather than the underlying system states. While this approach works in a lot"
" of situations, it is an incomplete view of the world."
msgstr ""
"PID denetleyicileri ayarlarken, mevcut, geçmiş ve gelecekle ilgili "
"denetleyici parametreleriyle uğraşmaya odaklanıyoruz: temel sistem "
"durumlarından ziyade :term:`error`  (P, I ve D terimleri). Bu yaklaşım pek "
"çok durumda işe yarasa da, eksik bir dünya görüşüdür."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:13
msgid ""
"Model-based control focuses on developing an accurate model of the "
":term:`system` (mechanism) we are trying to control. These models help "
"inform :term:`gains <gain>` picked for feedback controllers based on the "
"physical responses of the system, rather than an arbitrary proportional "
":term:`gain` derived through testing. This allows us not only to predict "
"ahead of time how a system will react, but also test our controllers without"
" a physical robot and save time debugging simple bugs."
msgstr ""
"Model tabanlı kontrol, kontrol etmeye çalıştığımız :term:`system` "
"(mechanism) için doğru bir model geliştirmeye odaklanır. Bu modeller keyfi "
"bir orantılı :term:`gains <gain>` yerine sistemin fiziksel yanıtlarına "
"dayalı olarak geribildirim denetleyicileri tarafından seçilen testler "
"yoluyla elde edilen  :term:`gains <gain>` bilgilendirmeye yardımcı olur. Bu,"
" sadece bir sistemin nasıl tepki vereceğini önceden tahmin etmemize değil, "
"aynı zamanda kontrolörlerimizi fiziksel bir robot olmadan test etmemize ve "
"basit hataların ayıklanmasında zamandan tasarruf etmemize olanak tanır."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:15
msgid ""
"State-space control makes extensive use of linear algebra. More on linear "
"algebra in modern control theory, including an introduction to linear "
"algebra and resources, can be found in Chapter 4 of `Controls Engineering in"
" FRC <https://file.tavsys.net/control/controls-engineering-in-frc.pdf>`__."
msgstr ""
"Durum uzayı kontrolü, doğrusal cebirden kapsamlı bir şekilde yararlanır. "
"Doğrusal cebire ve kaynaklara giriş de dahil olmak üzere modern kontrol "
"teorisinde doğrusal cebir hakkında daha fazla bilgi, Tyler Veness'in "
"izniyle,  `Controls Engineering in FRC <https://file.tavsys.net/control"
"/controls-engineering-in-frc.pdf>`__ 'deki 4.bölümde bulunabilir."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:17
msgid ""
"If you've used WPILib's feedforward classes for ``SimpleMotorFeedforward`` "
"or its sister classes, or used FRC-Characterization to pick PID :term:`gains"
" <gain>` for you, you're already familiar with model-based control! The "
"``kv`` and ``ka`` :term:`gains <gain>` can be used to describe how a motor "
"(or arm, or drivetrain) will react to voltage. We can put these constants "
"into standard state-space notation using WPILib's ``LinearSystem``, "
"something we will do in a later article."
msgstr ""
"WPILib'in ``SimpleMotorFeedforward`` veya onun kardeş sınıfları için ileri "
"besleme sınıflarını kullandıysanız veya PID'yi seçmek için FRC "
"Karakterizasyonu kullandıysanız: terim: sizin için <gain> kazanır ', model "
"tabanlı kontrole zaten aşinasınız! ``kv``ve ``ka`` :term:` `kazançlar <gain>"
" ', bir motorun (veya kolun veya aktarma organlarının) voltaja nasıl tepki "
"vereceğini açıklamak için kullanılabilir. Bu sabitleri, WPILib'in "
"``LinearSystem`` ini kullanarak standart durum-uzay gösterimine koyabiliriz,"
" bunu daha sonraki bir makalede yapacağız."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:20
msgid "Vocabulary"
msgstr "Kelime bilgisi"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:22
msgid ""
"For the background vocabulary that will be used throughout this article, see"
" the :ref:`Glossary <docs/software/advanced-controls/state-space/state-"
"space-glossary:State-Space Glossary>`."
msgstr ""
"Bu makale boyunca kullanılacak arka plan sözlüğü için bkz: :ref:`Glossary "
"<docs/software/advanced-controls/state-space/state-space-glossary:State-"
"Space Glossary>`."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:25
msgid "Introduction to Linear Algebra"
msgstr "Doğrusal Cebire Giriş"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:27
msgid ""
"For a short and intuitive introduction to the core concepts of Linear "
"Algebra, we recommend chapters 1 through 4 of `3Blue1Brown's Essence of "
"linear algebra series "
"<https://www.youtube.com/watch?v=fNk_zzaMoSs&list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab>`__"
" (Vectors, what even are they?, Linear combinations, span, and basis "
"vectors, Linear transformations and matrices, and Matrix multiplication as "
"composition)."
msgstr ""
"Lineer Cebirin temel kavramlarına kısa ve sezgisel bir giriş için, "
"`3Blue1Brown's Essence of linear algebra series "
"<https://www.youtube.com/watch?v=fNk_zzaMoSs&list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab>`__"
" in 1'den 4'e kadar olan bölümlerini öneriyoruz (Vektörler, bunlar ne bile "
"?, Doğrusal kombinasyonlar, aralık ve taban vektörleri, Doğrusal dönüşümler "
"ve matrisler ve kompozisyon olarak Matris çarpımı)."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:30
msgid "What is State-Space?"
msgstr "Durum Uzayı nedir?"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:32
msgid ""
"Recall that 2D space has two axes: x and y. We represent locations within "
"this space as a pair of numbers packaged in a vector, and each coordinate is"
" a measure of how far to move along the corresponding axis. State-space is a"
" `Cartesian coordinate system "
"<https://en.wikipedia.org/wiki/Cartesian_coordinate_system>`__ with an axis "
"for each state variable, and we represent locations within it the same way "
"we do for 2D space: with a list of numbers in a vector. Each element in the "
"vector corresponds to a state of the system. This example shows two example "
"state vectors in the state-space of an elevator model with the states "
":math:`[\\text{position}, \\text{velocity}]`:"
msgstr ""
"2D uzayın iki ekseni olduğunu hatırlayın: x ve y. Bu alandaki konumları, bir"
" vektörde paketlenmiş bir çift sayı olarak temsil ederiz ve her koordinat, "
"karşılık gelen eksen boyunca ne kadar hareket edileceğinin bir ölçüsüdür. "
"Durum uzayı, her bir durum değişkeni için bir eksene sahip bir kartezyen "
"koordinat sistemidir "
"<https://en.wikipedia.org/wiki/Cartesian_coordinate_system>`__ve içindeki "
"konumları, 2D uzay için yaptığımız gibi temsil ediyoruz: vektördeki "
"sayıların bir listesiyle. Vektördeki her eleman, sistemin bir durumuna "
"karşılık gelir. Bu örnek, bir asansör modelinin durum uzayında şu durumlara "
"sahip iki örnek durum vektörünü gösterir::math:`[\\text{position}, "
"\\text{velocity}]`:"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:36
msgid ""
"In this image, the vectors representing states in state-space are arrows. "
"From now on these vectors will be represented simply by a point at the "
"vector's tip, but remember that the rest of the vector is still there."
msgstr ""
"Bu görüntüde, durum uzayındaki durumları temsil eden vektörler oklardır. Şu "
"andan itibaren bu vektörler, vektörün ucundaki bir nokta ile temsil "
"edilecek, ancak vektörün geri kalanının hala orada olduğunu unutmayın."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:38
msgid ""
"In addition to the :term:`state`, :term:`inputs <input>` and :term:`outputs "
"<output>` are represented as vectors. Since the mapping from the current "
"states and inputs to the change in state is a system of equations, it’s "
"natural to write it in matrix form. This matrix equation can be written in "
"state-space notation."
msgstr ""
":term:`state`, :term:`girişleri <input> :term:`outputs <output>çıkışlarına "
"ek olarak vektörler olarak temsil edilir. Mevcut durumlardan ve girdilerden "
"durumdaki değişime haritalama bir denklemler sistemi olduğundan, bunu matris"
" biçiminde yazmak doğaldır. Bu matris denklemi durum uzayı gösteriminde "
"yazılabilir."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:41
msgid "What is State-Space Notation?"
msgstr "Durum Uzayı Gösterimi nedir?"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:43
msgid ""
"State-space notation is a set of matrix equations which describe how a "
"system will evolve over time. These equations relate the change in state "
":math:`\\dot{\\mathbf{x}}`, and the :term:`output` :math:`\\mathbf{y}`, to "
"linear combinations of the current state vector :math:`\\mathbf{x}` and "
":term:`input` vector :math:`\\mathbf{u}`."
msgstr ""
"Durum uzayı gösterimi, bir sistemin zaman içinde nasıl gelişeceğini "
"açıklayan bir dizi matris denklemidir. Bu denklemler,  "
":math:`\\dot{\\mathbf{x}}`, and the :term:`output` :math:`\\mathbf{y}`, "
"değişikliklerini mevcut durum vektörünün doğrusal kombinasyonlarıyla "
"ilişkilendirir :math:`\\mathbf{x}` and :term:`input` vector "
":math:`\\mathbf{u}`."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:45
msgid ""
"State-space control can deal with continuous-time and discrete-time systems."
" In the continuous-time case, the rate of change of the system's state "
":math:`\\mathbf{\\dot{x}}` is expressed as a linear combination of the "
"current state :math:`\\mathbf{x}` and input :math:`\\mathbf{u}`."
msgstr ""
"Durum alanı kontrolü, sürekli zamanlı ve ayrık zamanlı sistemlerle başa "
"çıkabilir. Sürekli zaman durumunda, sistemin durumunun değişim oranı: "
":math:`\\mathbf{\\dot{x}}` , geçerli durumun doğrusal bir kombinasyonu "
"olarak ifade edilir: :math:`\\mathbf{x}` and input :math:`\\mathbf{u}`."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:47
msgid ""
"In contrast, discrete-time systems expresses the state of the system at our "
"next timestep :math:`\\mathbf{x}_{k+1}` based on the current state "
":math:`\\mathbf{x}_k` and input :math:`\\mathbf{u}_k`, where :math:`k` is "
"the current timestep and :math:`k+1` is the next timestep."
msgstr ""
"Buna karşılık, ayrık zamanlı sistemler, bir sonraki zaman adımımızda "
"sistemin durumunu şu anki duruma göre ifade eder. :math:`\\mathbf{x}_{k+1}` "
"ve  mevcut duruma göre :math: `\\ mathbf {x} _k` ve girdi: math: `\\ mathbf "
"{u} _k`, burada :math:`k` geçerli zaman adımıdır ve :math:`k+1` sonraki "
"zaman adımıdır."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:49
msgid ""
"In both the continuous- and discrete-time forms, the :term:`output` vector "
":math:`\\mathbf{y}` is expressed as a linear combination of the current "
":term:`state` and :term:`input`. In many cases, the output is a subset of "
"the system's state, and has no contribution from the current input."
msgstr ""
"Hem sürekli hem de ayrık zaman formlarında,`output` vector "
":math:`\\mathbf{y}`, current: term: \"state\" ve:term:`input` ifadelerinin "
"doğrusal bir kombinasyonu olarak ifade edilir . Çoğu durumda, çıktı, sistem "
"durumunun bir alt kümesidir ve akım girişinden hiçbir katkısı yoktur."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:51
msgid ""
"When modeling systems, we first derive the continuous-time representation "
"because the equations of motion are naturally written as the rate of change "
"of a system's state as a linear combination of its current state and inputs."
" We convert this representation to discrete-time on the robot because we "
"update the system in discrete timesteps there instead of continuously."
msgstr ""
"Sistemleri modellerken, ilk olarak sürekli zaman gösterimini türetiyoruz "
"çünkü hareket denklemleri doğal olarak bir sistemin durumunun değişim hızı "
"olarak mevcut durumu ve girdilerinin doğrusal bir kombinasyonu olarak "
"yazılır. Bu gösterimi robot üzerinde ayrık zamana dönüştürüyoruz çünkü "
"sistemi sürekli yerine orada ayrı zaman adımlarında güncelliyoruz."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:53
msgid ""
"The following two sets of equations are the standard form of continuous-time"
" and discrete-time state-space notation:"
msgstr ""
"Aşağıdaki iki denklem seti, sürekli zaman ve ayrık zaman durum uzayı "
"gösteriminin standart biçimidir:"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:55
msgid ""
"\\text{Continuous: }\n"
"\\dot{\\mathbf{x}} &= \\mathbf{A}\\mathbf{x} + \\mathbf{B}\\mathbf{u} \\\\\n"
"\\mathbf{y} &= \\mathbf{C}\\mathbf{x} + \\mathbf{D}\\mathbf{u} \\\\\n"
"\\nonumber \\\\\n"
"\\text{Discrete: }\n"
"\\mathbf{x}_{k+1} &= \\mathbf{A}\\mathbf{x}_k + \\mathbf{B}\\mathbf{u}_k \\\\\n"
"\\mathbf{y}_k &= \\mathbf{C}\\mathbf{x}_k + \\mathbf{D}\\mathbf{u}_k\n"
"\n"
msgstr ""
"\\text{Continuous: }\n"
"\\dot{\\mathbf{x}} &= \\mathbf{A}\\mathbf{x} + \\mathbf{B}\\mathbf{u} \\\\\n"
"\\mathbf{y} &= \\mathbf{C}\\mathbf{x} + \\mathbf{D}\\mathbf{u} \\\\\n"
"\\nonumber \\\\\n"
"\\text{Discrete: }\n"
"\\mathbf{x}_{k+1} &= \\mathbf{A}\\mathbf{x}_k + \\mathbf{B}\\mathbf{u}_k \\\\\n"
"\\mathbf{y}_k &= \\mathbf{C}\\mathbf{x}_k + \\mathbf{D}\\mathbf{u}_k\n"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:64
msgid ""
"\\begin{array}{llll}\n"
"  \\mathbf{A} & \\text{system matrix}      & \\mathbf{x} & \\text{state vector} \\\\\n"
"  \\mathbf{B} & \\text{input matrix}       & \\mathbf{u} & \\text{input vector} \\\\\n"
"  \\mathbf{C} & \\text{output matrix}      & \\mathbf{y} & \\text{output vector} \\\\\n"
"  \\mathbf{D} & \\text{feedthrough matrix} &  &  \\\\\n"
"\\end{array}\n"
"\n"
msgstr ""
"\\begin{array}{llll}\n"
"\\mathbf{A} & \\text{system matrix} & \\mathbf{x} & \\text{state vector} \\\\\n"
"\\mathbf{B} & \\text{input matrix} & \\mathbf{u} & \\text{input vector} \\\\\n"
"\\mathbf{C} & \\text{output matrix} & \\mathbf{y} & \\text{output vector} \\\\\n"
"\\mathbf{D} & \\text{feedthrough matrix} & & \\\\\n"
"\\end{array}\n"
"\n"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:72
msgid ""
"A continuous-time state-space system can be converted into a discrete-time "
"system through a process called discretization."
msgstr ""
"Sürekli zaman durum uzay sistemi, ayrıklaştırma adı verilen bir süreçle "
"ayrık zamanlı bir sisteme dönüştürülebilir."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:74
msgid ""
"In the discrete-time form, the system's state is held constant between "
"updates. This means that we can only react to disturbances as quickly as our"
" state estimate is updated. Updating our estimate more quickly can help "
"improve performance, up to a point. WPILib's ``Notifier`` class can be used "
"if updates faster than the main robot loop are desired."
msgstr ""
"Ayrık zamanlı formda, sistemin durumu güncellemeler arasında sabit tutulur. "
"Bu, rahatsızlıklara yalnızca durum tahminimiz güncellendiğinde tepki "
"verebileceğimiz anlamına gelir. Tahminimizi daha hızlı güncellemek, "
"performansın bir noktaya kadar iyileştirilmesine yardımcı olabilir. "
"WPILib'in ``Notifier`` sınıfı, ana robot döngüsünden daha hızlı "
"güncellemeler isteniyorsa kullanılabilir."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:76
msgid ""
"While a system's continuous-time and discrete-time matrices A, B, C, and D "
"have the same names, they are not equivalent. The continuous-time matrices "
"describes the rate of change of the state, :math:`\\mathbf{x}`, while the "
"discrete-time matrices describe the system's state at the next timestep as a"
" function of the current state and input."
msgstr ""
"Bir sistemin sürekli zaman ve ayrık zaman matrisleri A, B, C ve D aynı "
"adlara sahipken, bunlar eşdeğer değildir. Sürekli zaman matrisleri, durum "
"değişim oranını açıklarken:math:`\\mathbf{x}` , ayrık zaman matrisleri ise "
"sistemin durumunu bir sonraki zaman adımında mevcut durum ve girdinin bir "
"fonksiyonu olarak tanımlar."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:78
msgid ""
"WPILib's LinearSystem takes continuous-time system matrices, and converts "
"them internally to the discrete-time form where necessary."
msgstr ""
"WPILib'in LinearSystem'i, sürekli zaman sistem matrislerini alır ve bunları "
"gerektiğinde dahili olarak ayrık zaman biçimine dönüştürür."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:81
msgid "State-space Notation Example: Flywheel from kV and kA"
msgstr "Durum Uzayı Gösterimi Örneği: kV ve kA'dan volan"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:83
msgid ""
":ref:`Recall <docs/software/advanced-"
"controls/controllers/feedforward:SimpleMotorFeedforward>` that we can model "
"the motion of a flywheel connected to a brushed DC motor with the equation "
":math:`V = kV \\cdot v + kA \\cdot a`, where V is voltage output, v is the "
"flywheel's angular velocity and a is its angular acceleration. This equation"
" can be rewritten as :math:`a = \\frac{V - kV \\cdot v}{kA}`, or :math:`a = "
"\\frac{-kV}{kA} \\cdot v + \\frac{1}{kA} \\cdot V`. Notice anything "
"familiar? This equation relates the angular acceleration of the flywheel to "
"its angular velocity and the voltage applied."
msgstr ""
":ref:`Recall <docs/software/advanced-"
"controls/controllers/feedforward:SimpleMotorFeedforward>`  'ı, fırçalanmış "
"bir DC motora bağlı bir volanın hareketini şu denklemle "
"modelleyebileceğimizi hatırlayın:math:`V = kV \\cdot v + kA \\cdot a``, "
"burada V, voltaj çıkışıdır, v çarkın açısal hızı ve a açısal ivmesidir. Bu "
"denklem şu şekilde yeniden yazılabilir :math:`a = \\frac{V - kV \\cdot "
"v}{kA}` veya :math:`a = \\frac{-kV}{kA} \\cdot v + \\frac{1}{kA} \\cdot V`. "
"Tanıdık bir şey fark ettiniz mi? Bu denklem, volanın açısal ivmesini, açısal"
" hızı ve uygulanan voltaj ile ilişkilendirir."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:85
msgid ""
"We can convert this equation to state-space notation. We can create a system"
" with one state (velocity), one :term:`input` (voltage), and one "
":term:`output` (velocity). Recalling that the first derivative of velocity "
"is acceleration, we can write our equation as follows, replacing velocity "
"with :math:`\\mathbf{x}`, acceleration with :math:`\\mathbf{\\dot{x}}`, and "
"voltage :math:`\\mathbf{V}` with :math:`\\mathbf{u}`:"
msgstr ""
"Bu denklemi durum uzayı gösterimine dönüştürebiliriz. Bir durum (hız), bir "
":term:`input` (voltage) ve bir :term:`output` (velocity) olan bir sistem "
"oluşturabiliriz. Hızın ilk türevinin ivme olduğunu hatırlayarak, "
"denklemimizi aşağıdaki gibi yazabiliriz, hızı şu ile değiştirebiliriz: "
":math:`\\mathbf{x}`, acceleration with :math:`\\mathbf{\\dot{x}}` ve "
"voltaj:math:`\\mathbf{V}` ile : math:`\\mathbf {u}`:"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:87
msgid ""
"\\mathbf{\\dot{x}} = \\begin{bmatrix}\\frac{-kV}{kA}\\end{bmatrix} \\mathbf{x} + \\begin{bmatrix}\\frac{1}{kA}\\end{bmatrix} \\mathbf{u}\n"
"\n"
msgstr ""
"\\mathbf{\\dot{x}} = \\begin{bmatrix}\\frac{-kV}{kA}\\end{bmatrix} \\mathbf{x} + \\begin{bmatrix}\\frac{1}{kA}\\end{bmatrix} \\mathbf{u} \n"
"\n"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:90
msgid ""
"That's it! That's the state-space model of a system for which we have the kV"
" and kA constants. This same math is use in FRC-Characterization to model "
"flywheels and drivetrain velocity systems."
msgstr ""
"Bu kadar! Bu, kV ve kA sabitlerine sahip olduğumuz bir sistemin durum uzayı "
"modelidir. Aynı matematik, FRC Karakterizasyonunda volanları ve aktarma "
"organı hız sistemlerini modellemek için kullanılır."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:93
msgid "Visualizing State-Space Responses: Phase Portrait"
msgstr "Durum Uzayı Yanıtlarını Görselleştirme: Faz Portresi"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:95
msgid ""
"A `phase portrait <https://en.wikipedia.org/wiki/Phase_portrait>`__ can help"
" give a visual intuition for the response of a system in state-space. The "
"vectors on the graph have their roots at some point :math:`\\mathbf{x}` in "
"state-space, and point in the direction of :math:`\\mathbf{\\dot{x}}`, the "
"direction that the system will evolve over time. This example shows a model "
"of a pendulum with the states of angle and angular velocity."
msgstr ""
"Bir`phase portrait <https://en.wikipedia.org/wiki/Phase_portrait>`__ , durum"
" uzayındaki bir sistemin tepkisi için görsel bir sezgi sağlamaya yardımcı "
"olabilir. Grafikteki vektörlerin kökleri bir noktada vardır: durum uzayında "
":math:`\\mathbf{x}` ve :math:`\\mathbf{\\dot{x}}`,yönünü, yani sistem "
"zamanla gelişecektir. Bu örnek, açı ve açısal hız durumlarıyla bir sarkaç "
"modelini göstermektedir."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:97
msgid ""
"To trace a potential trajectory that a system could take through state-"
"space, choose a point to start at and follow the arrows around. In this "
"example, we might start at :math:`[-2, 0]`. From there, the velocity "
"increases as we swing through vertical and starts to decrease until we reach"
" the opposite extreme of the swing. This cycle of spinning about the origin "
"repeats indefinitely."
msgstr ""
"Bir sistemin durum uzayında alabileceği potansiyel bir yörüngeyi izlemek "
"için, başlamak üzere bir nokta seçin ve etrafındaki okları takip edin. Bu "
"örnekte, :math:`[-2, 0]` ile başlayabiliriz. Oradan, biz dikeyde döndükçe "
"hız artar ve salınımın zıt ucuna ulaşana kadar azalmaya başlar. Kökenle "
"ilgili bu dönme döngüsü sonsuza kadar tekrar eder."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:101
msgid ""
"Note that near the edges of the phase portrait, the X axis wraps around as a"
" rotation of :math:`\\pi` radians counter clockwise and a rotation of "
":math:`\\pi` radians clockwise will end at the same point."
msgstr ""
"Faz portresinin kenarlarının yakınında, X ekseninin saat yönünün tersine: "
"math: `\\pi` radyan dönüşü olarak sarıldığına ve :math:`\\pi` radyanının "
"saat yönünde bir dönüşünün aynı noktada sona ereceğine dikkat edin."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:103
msgid ""
"For more on differential equations and phase portraits, see `3Blue1Brown's "
"Differential Equations video "
"<https://www.youtube.com/watch?v=p_di4Zn4wz4>`__ -- they do a great job of "
"animating the pendulum phase space at around 15:30."
msgstr ""
"Diferansiyel denklemler ve faz portreleri hakkında daha fazla bilgi için, "
"bkz.`3Blue1Brown Diferansiyel Denklemler videosu "
"<https://www.youtube.com/watch?v=p_di4Zn4wz4>`__ - saat 15: 30'da sarkaç faz"
" uzayını canlandırmak için harika bir iş çıkarırlar."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:106
msgid "Visualizing Feedforward"
msgstr "Feedforward'ı Görselleştirme"

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:108
msgid ""
"This phase portrait shows the \"open loop\" responses of the system -- that "
"is, how it will react if we were to let the state evolve naturally. If we "
"want to, say, balance the pendulum horizontal (at :math:`(\\frac{\\pi}{2}, "
"0)` in state space), we would need to somehow apply a control :term:`input` "
"to counteract the open loop tendency of the pendulum to swing downward. This"
" is what feedforward is trying to do -- make it so that our phase portrait "
"will have an equilibrium at the :term:`reference` position (or setpoint) in "
"state-space."
msgstr ""
"Bu aşama portresi, sistemin\"open loop\" tepkilerini, yani devletin doğal "
"olarak gelişmesine izin verirsek nasıl tepki vereceğini gösterir. Sarkacı "
"yatay olarak dengelemek istiyorsak  (at :math:`(\\frac{\\pi}{2}, 0)` in "
"state space), bir şekilde bir kontrol uygulamamız gerekir: term: `input` "
"Sarkacın açık döngü eğiliminin aşağı doğru sallanma eğilimine karşı koymak "
"için. Feedforward'ın yapmaya çalıştığı budur - bunu, faz portremizin durum "
"uzayındaT :term:`reference`  AMkonumunda (veya ayar noktasında) bir dengeye "
"sahip olmasını sağlayın."

#: ../../frc-docs/source/docs/software/advanced-controls/state-space/state-space-intro.rst:110
msgid ""
"Looking at our phase portrait from before, we can see that at "
":math:`(\\frac{\\pi}{2}, 0)` in state space, gravity is pulling the pendulum"
" down with some torque T, and producing some downward angular acceleration "
"with magnitude :math:`\\frac{\\tau}{I}`, where I is angular :term:`moment of"
" inertia` of the pendulum. If we want to create an equilibrium at our "
":term:`reference` of :math:`(\\frac{\\pi}{2}, 0)`, we would need to apply an"
" :term:`input` can counteract the system's natural tendency to swing "
"downward. The goal here is to solve the equation :math:`\\mathbf{0 = Ax + "
"Bu}` for :math:`\\mathbf{u}`. Below is shown a phase portrait where we apply"
" a constant :term:`input` that opposes the force of gravity at "
":math:`(\\frac{\\pi}{2}, 0)`:"
msgstr ""
"Faz portremize daha önce baktığımızda şunu görebiliriz "
":math:`(\\frac{\\pi}{2}, 0)` durum uzayında, yerçekimi bir miktar T torku "
"ile sarkacı aşağı çekiyor ve biraz aşağı doğru üretiyor sarkacın büyüklük : "
"math:`\\frac{\\tau}{I}` ile açısal ivmesi, burada açısal: terim: "
"`eylemsizlik momenti`. Matematik :`(\\frac{\\ pi} {2}, 0)`: terim: "
"`referansımız 'da bir denge oluşturmak istiyorsak, bir: terim uygulamamız "
"gerekir :`input`, sistemin doğal olarak aşağı doğru sallanma eğilimi. "
"Buradaki amaç math:`\\mathbf{0 = Ax+Bu}` denklemini :math:`\\mathbf{u}` için"
" çözmektir. Aşağıda, sabit :term:`input`  uyguladığımız bir faz portresi "
"gösterilmektedir :math:`(\\frac{\\pi}{2}, 0)`:"
