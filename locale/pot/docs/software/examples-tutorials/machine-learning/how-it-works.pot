# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-21 04:12+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:4
msgid "How it Works"
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:7
msgid "Dockerfile"
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:9
msgid "The dockerfile is used to build an ECR image used by the training instance. The dockerfile contains the following important dependencies:"
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:11
msgid "TensorFlow for GPU"
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:12
msgid "Python 2 and 3"
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:13
msgid "Coral retraining scripts"
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:14
msgid "`WPILib scripts <https://github.com/wpilibsuite/DetectCoral/tree/dc17f4abdc101612ca163857bde363a082cd6ee2/container/coral>`__"
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:17
msgid "Data"
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:19
msgid "Images should be labelled in Supervisely. They should be downloaded as ``jpeg + json``, in a tar file. When the user calls ``estimator.fit(\"s3://bucket\")``, SageMaker automatically downloads the content of that folder/bucket to ``/opt/ml/input/data/training`` inside of the training instance."
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:21
msgid "The tar is converted to the 2 records and ``.pbtxt`` used by the retraining script by the ``tar_to_record.sh`` script. It automatically finds the ONLY tar in the specified folder and extracts it. It then uses ``json_to_csv.py`` to convert the jsons to 2 large csv files. ``generate_tfrecord.py`` converts the csv files into .record files. Finally, the ``meta.json`` file is parsed by ``parse_meta.py`` to create the ``.pbtxt`` file, which is a label map."
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:24
msgid "Hyperparameters"
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:26
msgid "At the moment, the only hyperparameter that you can change is the number of training steps. The dict specified in the notebook is written to ``/opt/ml/input/config/hyperparameters.json`` in the training instance. It is parsed by ``hyper.py``, and is used when calling ``./retrain_....sh`` in train."
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:29
msgid "Training"
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:31
msgid "``estimator.fit(...)`` calls the train script inside the training instance. It downloads checkpoints, creates the records, trains, converts to .tflite, and uploads to S3."
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:34
msgid "Output"
msgstr ""

#: ../../frc-docs/source/docs/software/examples-tutorials/machine-learning/how-it-works.rst:36
msgid "The output ``output.tflite`` is moved to ``/opt/ml/model/output.tflite``. This is then automatically uploaded to an S3 bucket generated by SageMaker. You can find exactly where this is uploaded by going into the completed training job in SageMaker. It will be inside of a tar, inside of a tar."
msgstr ""
