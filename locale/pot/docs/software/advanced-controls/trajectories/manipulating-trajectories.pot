# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-08-25 04:10+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:2
msgid "Manipulating Trajectories"
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:3
msgid "Once a trajectory has been generated, you can retrieve information from it using certain methods. These methods will be useful when writing code to follow these trajectories."
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:6
msgid "Getting the total duration of the trajectory"
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:7
msgid "Because all trajectories have timestamps at each point, the amount of time it should take for a robot to traverse the entire trajectory is pre-determined. The ``TotalTime()`` (C++) / ``getTotalTimeSeconds()`` (Java) method can be used to determine the time it takes to traverse the trajectory."
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:23
msgid "Sampling the trajectory"
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:24
msgid "The trajectory can be sampled at various timesteps to get the pose, velocity, and acceleration at that point. The ``Sample(units::second_t time)`` (C++) / ``sample(double timeSeconds)`` (Java) method can be used to sample the trajectory at any timestep. The parameter refers to the amount of time passed since 0 seconds (the starting point of the trajectory). This method returns a ``Trajectory::Sample`` with information about that sample point."
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:40
msgid "The ``Trajectory::Sample`` struct has several pieces of information about the sample point:"
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:42
msgid "``t``: The time elapsed from the beginning of the trajectory up to the sample point."
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:43
msgid "``velocity``: The velocity at the sample point."
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:44
msgid "``acceleration``: The acceleration at the sample point."
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:45
msgid "``pose``: The pose (x, y, heading) at the sample point."
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:46
msgid "``curvature``: The curvature (rate of change of heading with respect to distance along the trajectory) at the sample point."
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:48
msgid "Note: The angular velocity at the sample point can be calculated by multiplying the velocity by the curvature."
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:51
msgid "Getting all states of the trajectory (advanced)"
msgstr ""

#: ../../frc-docs/source/docs/software/advanced-controls/trajectories/manipulating-trajectories.rst:52
msgid "A more advanced user can get a list of all states of the trajectory by calling the ``States()`` (C++) / ``getStates()`` (Java) method. Each state represents a point on the trajectory. :ref:`When the trajectory is created <docs/software/advanced-controls/trajectories/trajectory-generation:Generating the trajectory>` using the ``TrajectoryGenerator::GenerateTrajectory(...)`` method, a list of trajectory points / states are created. When the user samples the trajectory at a particular timestep, a new sample point is interpolated between two existing points / states in the list."
msgstr ""
