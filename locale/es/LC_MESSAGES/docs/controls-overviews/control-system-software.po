# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, FIRST
# This file is distributed under the same license as the FIRST Robotics Competition package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
# 
# Translators:
# Sofia Fernandez <sofiafdz.val@gmail.com>, 2020
# Pierre Cote <persini24@outlook.com>, 2020
# Diana Ramos <dianaracasas@gmail.com>, 2020
# 
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: FIRST Robotics Competition 2020\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-12-13 04:14+0000\n"
"PO-Revision-Date: 2020-12-11 04:16+0000\n"
"Last-Translator: Diana Ramos <dianaracasas@gmail.com>, 2020\n"
"Language-Team: Spanish (Mexico) (https://www.transifex.com/wpilib/teams/109324/es_MX/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: es_MX\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:4
msgid "FRC Software Component Overview"
msgstr "Descripción general del componente de software FRC"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:6
msgid ""
"The FRC\\ |reg| control system consists of a wide variety of mandatory and "
"optional software components. These elements are designed to assist you in "
"the design, development, and debugging of your robot code as well as assist "
"with control robot operation and to provide feedback when troubleshooting. "
"For each software component this document will provide a brief overview of "
"its purpose, a link to the package download, if appropriate, and a link to "
"further documentation where available."
msgstr ""
"El sistema de control de FRC\\ |reg| consta de una amplia variedad de "
"componentes de software obligatorios y opcionales. Estos elementos están "
"diseñados para ayudarlo en el diseño, desarrollo y depuración del código de "
"su robot, así como para ayudarlo a controlar el funcionamiento de su robot y"
" proporcionar retroalimentación al solucionar problemas. Para cada "
"componente de software, este documento proporcionará una breve descripción "
"general de su propósito, un enlace a la descarga del paquete, y si "
"corresponde, un enlace a más documentación cuando esté disponible."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:9
msgid "Operating System Compatibility"
msgstr "Compatibilidad del sistema operativo"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:11
msgid ""
"The primary supported OS for FRC components is Windows. All required FRC "
"software components have been tested on Windows 7, 8, and 10. Windows XP is "
"not supported."
msgstr ""
"El sistema operativo principal compatible con los componentes de FRC es "
"Windows. Todos los componentes de software FRC necesarios se han probado en "
"Windows 7, 8 y 10. Windows XP no es compatible."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:13
msgid ""
"Having said that, many of the tools for C++/Java programming are also "
"supported and tested on macOS and Linux. Teams programming in C++/Java "
"should be able to develop using these systems, using a Windows system for "
"the Windows-only operations such as Driver Station, radio programming, and "
"roboRIO imaging."
msgstr ""
"Dicho esto, muchas de las herramientas para la programación de C++/Java "
"también son compatibles y probadas en macOS y Linux. La programación de "
"equipos en C++/Java debería poder desarrollarse utilizando estos sistemas, "
"utilizando un sistema Windows para las operaciones exclusivas de Windows, "
"como Driver Station, programación de radio e imágenes roboRIO."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:16
msgid "LabVIEW FRC (Windows Only)"
msgstr "LabVIEW FRC (solo Windows)"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:20
msgid ""
"LabVIEW FRC, based on NI’s LabVIEW 2019, is the development environment for "
"LabVIEW, one of the three officially supported languages for programming an "
"FRC robot. LabVIEW is a graphical, dataflow-driven language. LabVIEW "
"programs consist of a collection of icons, called VIs, wired together with "
"wires which pass data between the VIs. The LabVIEW FRC installer is "
"distributed on a DVD found in the Kickoff Kit of Parts and is also available"
" for download (see installation instructions page linked below). "
"Instructions for installing the FRC libraries (package also includes Driver "
"Station and Utilities) can be found :ref:`here <docs/zero-to-robot/step-2"
"/frc-game-tools:Installing the FRC Game Tools>`. A guide to getting started "
"with the LabVIEW FRC software, including installation instructions can be "
"found :ref:`here <docs/zero-to-robot/step-2/labview-setup:Installing LabVIEW"
" for FRC (LabVIEW only)>`."
msgstr ""
"LabVIEW FRC, basado en LabVIEW 2019 de NI, es el ambiente desarrollado por "
"LabVIEW, uno de los tres lenguajes oficiales para programar un robot de FRC."
" LabVIEW es gráfico, un lenguaje impulsado por el flujo de datos. Los "
"programas de LabVIEW consisten en una colección de íconos, llamados VI, "
"conectados con cables que pasan datos entre VIs. El instalador de LabVIEW "
"para FRC es distribuido en un DVD disponible en el Kit de Partes del Kickoff"
" y también para descargarse (vea la página de instrucciones para instalación"
" en la parte de abajo). Las instrucciones para instalar las librerías de FRC"
" (el paquete también incluye la Driver Station y sus utilidades) las puede "
"encontrar :ref:`aquí <docs/zero-to-robot/step-2/frc-game-tools:Installing "
"the FRC Game Tools>`. La guía para empezar con el software de LabVIEW FRC, "
"incluyendo las instrucciones de instalación se encuentran :ref:`aquí <docs"
"/zero-to-robot/step-2/labview-setup:Installing LabVIEW for FRC (LabVIEW "
"only)>`."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:23
msgid "FRC Robot Simulator (Windows Only)"
msgstr "Simulador de robot FRC (solo Windows)"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:27
msgid ""
"The FRC Robot Simulator is a component of the LabVIEW programming "
"environment that allows you to operate a predefined robot in a simulated "
"environment to test code and/or Driver Station functions. It utilizes a "
"LabVIEW code project as the robot code and communicates with the FRC Driver "
"Station for robot control and the FRC Default Dashboard for robot feedback. "
"The FRC Robot Simulator is installed with the LabVIEW FRC package. "
"Information on using the FRC Robot Simulator can be found by opening the "
"Robot Simulation Readme.html file in the LabVIEW Project Explorer."
msgstr ""
"El FRC Robot Simulator es un componente del entorno de programación de "
"LabVIEW que le permite operar un robot predefinido en un entorno simulado "
"para probar código y / o funciones de Driver Station. Utiliza un proyecto de"
" código de LabVIEW como código de robot y se comunica con la Driver Station "
"FRC para el control del robot y la Dashboard FRC predeterminada para la "
"retroalimentación del robot. El FRC Robot Simulator se instala con el "
"paquete LabVIEW FRC. Se puede encontrar información sobre el uso del FRC "
"Robot Simulator abriendo el archivo Robot Simulation Readme.html en el "
"Explorador de proyectos de LabVIEW."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:30
msgid "Visual Studio Code"
msgstr "Visual Studio Code"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:34
msgid ""
"Visual Studio Code is the supported development environment for C++ and "
"Java, two of the three supported languages used for programming an FRC "
"robot. Both are object-oriented text based programming languages. A program "
"in C++ (for FRC) consists of a number of header (.h) and implementation "
"(.cpp) files where as a program in Java consists of ``.java`` files "
"contained in one or more packages. A guide to getting started with C++ for "
"FRC, including the installation and configuration of Visual Studio Code can "
"be found by following the rest of this tutorial."
msgstr ""
"Visual Studio Code es el entorno de desarrollo compatible con C++ y Java, "
"dos de los tres lenguajes compatibles que se utilizan para programar un "
"robot FRC. Ambos son lenguajes de programación basados en texto orientados a"
" objetos. Un programa en C++ (para FRC) consta de una serie de archivos de "
"encabezado (.h) y de implementación (.cpp), mientras que un programa en Java"
" consta de archivos ``.java`` contenidos en uno o más paquetes. Puede "
"encontrar una guía para comenzar con C++ para FRC, incluida la instalación y"
" configuración de Visual Studio Code siguiendo el resto de este tutorial."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:37
msgid "FRC Driver Station Powered by NI LabVIEW (Windows Only)"
msgstr "FRC Driver Station desarrollada por NI LabVIEW (Solo Windows)"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:41
msgid ""
"The FRC Driver Station Powered by NI LabVIEW is the only software allowed to"
" be used for the purpose of controlling the state of the robot during "
"competition. This software contains the code necessary to send data to your "
"robot from a variety of input devices such as joysticks, gamepads, and "
"customizable IO boards. It also contains a number of tools used to help "
"troubleshoot robot issues such as status indicators and log file creation. "
"Instructions for installing the FRC Driver Station Powered by NI LabVIEW "
"(included in the FRC Game Tools can be found :ref:`here <docs/zero-to-"
"robot/step-2/frc-game-tools:Installing the FRC Game Tools>`. More "
"information about the FRC Driver Station Powered by NI LabVIEW can be found "
":ref:`here <docs/software/driverstation/driver-station:FRC Driver Station "
"Powered by NI LabVIEW>`."
msgstr ""
"La FRC Driver Station impulsada por NI LabVIEW es el único software que se "
"permite usar con el propósito de controlar el estado del robot durante la "
"competencia. Este software contiene el código necesario para enviar datos a "
"su robot desde una variedad de dispositivos de entrada como joysticks, "
"gamepads y placas IO personalizables. También contiene una serie de "
"herramientas que se utilizan para ayudar a solucionar problemas del robot, "
"como los indicadores de estado y la creación de archivos de registro. Las "
"instrucciones para instalar FRC Driver Station Powered by NI LabVIEW "
"(incluido en FRC Game Tools se pueden encontrar :ref:`aquí <docs/zero-to-"
"robot/step-2/frc-game-tools:Installing the FRC Game Tools>`. Más información"
" sobre FRC Driver Station Powered by NI LabVIEW se puede encontrar "
":ref:`aquí <docs/software/driverstation/driver-station:FRC Driver Station "
"Powered by NI LabVIEW>` ."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:44
msgid "FRC LabVIEW Dashboard (Windows Only)"
msgstr "FRC LabVIEW Dashboard (solo Windows)"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:48
msgid ""
"The FRC LabVIEW Dashboard is the default dashboard program installed with, "
"and automatically launched by, the FRC Driver Station. The purpose of the "
"Dashboard is to provide feedback about the operation of the robot. The FRC "
"Default Dashboard serves as a an example of the types of feedback teams may "
"want from their robot. It includes a tabbed display that can switch between "
"viewing an image from a camera on the robot or a display of NetworkTables "
"variables, a display of information regarding the joysticks and drive "
"motors, an indicator of the robot IP and battery voltage, and a second "
"tabbed display that can switch between examples of custom indicators and "
"controls, a test tab for use with the Driver Station Test Mode and a "
"Checklist tab that teams can use to enter a custom checklist to complete "
"before each match. The FRC Default Dashboard is included in the FRC Game "
"Tools. Installation instructions can be found :ref:`here <docs/zero-to-"
"robot/step-2/frc-game-tools:Installing the FRC Game Tools>`. More "
"information about the FRC Default Dashboard software can be found :ref:`here"
" <docs/software/labview-dashboard/driver-station-labview-dashboard:FRC "
"LabVIEW Dashboard>`."
msgstr ""
"FRC LabVIEW Dashboard es el programa predeterminado  de dashboard que se "
"instala y ejecuta automáticamente por la FRC Driver Station. El propósito de"
" la Dashboard es proporcionar información sobre el funcionamiento del robot."
" La Dashboard predeterminada de FRC sirve como un ejemplo de los tipos de "
"comentarios que los equipos pueden desear de su robot. Incluye una pantalla "
"con pestañas que puede cambiar entre ver una imagen de una cámara en el "
"robot o una pantalla de variables de NetworkTables, una pantalla de "
"información sobre los joysticks y motores, un indicador de la IP del robot y"
" el voltaje de la batería, y una segunda pestaña pantalla que puede cambiar "
"entre ejemplos de indicadores y controles personalizados, una pestaña de "
"prueba para usar con el TestMode de la Driver Station y una pestaña de "
"Checklist que los equipos pueden usar para crear una Checklist a completar "
"antes de cada partido. La Dashboard de FRC se incluye en las FRC Game Tools."
" Las instrucciones de instalación se pueden encontrar :ref:`aquí <docs/zero-"
"to-robot/step-2/frc-game-tools:Installing the FRC Game Tools>`. Se puede "
"encontrar más información sobre el software de la FRC Dashboard "
"predeterminada :ref:`aquí <docs/software/labview-dashboard/driver-station-"
"labview-dashboard:FRC LabVIEW Dashboard>`."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:51
msgid "SmartDashboard"
msgstr "SmartDashboard"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:55
msgid ""
"SmartDashboard is an alternate dashboard application written in Java. "
"SmartDashboard automatically creates a widget for each variable sent from "
"the Robot sent using the SmartDashboard class or VIs. These widgets can be "
"configured to a number of preset display types, or users can create custom "
"extensions in Java. Vision extensions are available for the SmartDashboard "
"which allow it to display images from the Axis camera on the robot. "
"SmartDashboard is included in the C++ and Java language updates (enabled by "
"clicking the C++ or Java buttons respectively on the Setup tab of the Driver"
" Station). Additional documentation on SmartDashboard can be found "
":ref:`here <docs/software/wpilib-"
"tools/smartdashboard/index:SmartDashboard>`."
msgstr ""
"SmartDashboard es una aplicación de dashboard alternativa escrita en Java. "
"SmartDashboard crea automáticamente un widget para cada variable enviada "
"desde el Robot enviado usando la clase SmartDashboard o VIs. Estos widgets "
"se pueden configurar para varios tipos de visualización preestablecidos, o "
"los usuarios pueden crear extensiones personalizadas en Java. Hay "
"extensiones de visión disponibles para SmartDashboard que le permiten "
"mostrar imágenes de la cámara Axis en el robot. SmartDashboard está incluido"
" en las actualizaciones de los lenguajes C++ y Java (habilitado haciendo "
"clic en los botones C++ o Java respectivamente en la pestaña Configuración "
"de la Driver Station). Se puede encontrar documentación adicional sobre "
"SmartDashboard :ref:`aquí <docs/software/wpilib-"
"tools/smartdashboard/index:SmartDashboard>`."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:58
msgid "LiveWindow"
msgstr "LiveWindow"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:62
msgid ""
"LiveWindow is a mode of SmartDashboard , designed for use with the Test Mode"
" of the Driver Station. LiveWindow allows the user to see feedback from "
"sensors on the robot and control actuators independent of the written user "
"code. More information about LiveWindow can be found :ref:`here "
"<docs/software/wpilib-tools/smartdashboard/test-mode-and-live-"
"window/index:SmartDashboard: Test Mode and Live Window>`."
msgstr ""
"LiveWindow es un modo de SmartDashboard, diseñado para usarse con el modo de"
" prueba de la Driver Station. LiveWindow permite al usuario ver los "
"comentarios de los sensores del robot y controlar los actuadores "
"independientemente del código de usuario escrito. Puede encontrar más "
"información sobre LiveWindow :ref:`aquí <docs/software/wpilib-"
"tools/smartdashboard/test-mode-and-live-window/index:SmartDashboard: Test "
"Mode and Live Window>`."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:65
msgid "Shuffleboard"
msgstr "Juego de tejo"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:69
msgid ""
"Shuffleboard is an alternative dashboard application written in Java. It "
"takes many of the concepts from SmartDashboard such as automatic adding of "
"widgets and adds new features including better layout control and "
"record/playback functionality. Shuffleboard contains all of the basic widget"
" types found in the SmartDashboard as well as a number of new ones intended "
"to make visualizing specific robot components even easier. It has full "
"integration with WPILib’s “cscore” for displaying, recording, and playing "
"back camera streams. Shuffleboard is included in the C++ and Java language "
"updates (enabled by selecting Shuffleboard from the dashboard type on the "
"Setup tab of the Driver Station or by launching it from the WPILib start "
"tool menu in Visual Studio Code). Additional documentation on Shuffleboard "
"can be found :ref:`here <docs/software/wpilib-"
"tools/shuffleboard/index:Shuffleboard>`."
msgstr ""
"Shuffleboard es una aplicación de dashboard alternativa escrita en Java. "
"Toma muchos de los conceptos de SmartDashboard, como la adición automática "
"de widgets y agrega nuevas características, incluido un mejor control de "
"diseño y funcionalidad de grabación / reproducción. Shuffleboard contiene "
"todos los tipos básicos de widgets que se encuentran en SmartDashboard, así "
"como varios nuevos destinados a facilitar aún más la visualización de "
"componentes específicos del robot. Tiene una integración completa con el "
"\"cscore\" de WPILib para mostrar, grabar y reproducir transmisiones de "
"cámara. Shuffleboard está incluido en las actualizaciones de lenguaje C++ y "
"Java (habilitado seleccionando Shuffleboard en el tipo de Dashboard en la "
"pestaña Configuración de la Driver Station o iniciándolo desde el menú de la"
" herramienta de inicio WPILib en Visual Studio Code). Se puede encontrar "
"documentación adicional sobre Shuffleboard :ref:`aquí <docs/software/wpilib-"
"tools/shuffleboard/index:Shuffleboard>`."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:72
msgid "FRC roboRIO Imaging Tool (Windows Only)"
msgstr "Herramienta de Imagen de la roboRIO para FRC (Exclusiva para Windows)"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:76
msgid ""
"The FRC roboRIO Imaging Tool is a software tool used to format and setup an "
"roboRIO-FRC device for use in FRC. The tool detects any roboRIO device on "
"the network, reports the current MAC, name, IP and Image version. The tool "
"allows the user to configure the team number, set options including Console "
"Out and whether an applications runs on Startup, and install the latest "
"software image on the device. The FRC roboRIO Imaging Tool is installed as "
"part of the FRC Game Tools. Installation instructions can be found "
":ref:`here <docs/zero-to-robot/step-2/frc-game-tools:Installing the FRC Game"
" Tools>`. Additional instructions on imaging your roboRIO using this tool "
"can be found :doc:`here </docs/zero-to-robot/step-3/imaging-your-roborio>`."
msgstr ""
"FRC roboRIO Imaging Tool es una herramienta de software que se utiliza para "
"formatear y configurar un dispositivo roboRIO-FRC para su uso en FRC. La "
"herramienta detecta cualquier dispositivo roboRIO en la red, informa la "
"versión actual de MAC, nombre, IP e imagen. La herramienta permite al "
"usuario configurar el número de equipo, establecer opciones que incluyen "
"Console Out y si una aplicación se ejecuta en el inicio, e instalar la "
"última imagen de software en el dispositivo. FRC roboRio Imaging Tool es "
"instalada como parte de las Herramientas de Juego de FRC. Las instrucciones "
"de instalación puede ser encontrada :ref:`aquí <docs/zero-to-robot/step-2"
"/frc-game-tools:Installing the FRC Game Tools>`. Instrucciones adicionales "
"en imaginar su roboRIO usando esta herramienta puede ser encontrada "
":doc:`aquí </docs/zero-to-robot/step-3/imaging-your-roborio>`."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:79
msgid "Setup Axis Camera (Windows Only)"
msgstr "Configuración de la Cámara Axis (Sólo para Windows)"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:83
msgid ""
"The Setup Axis Camera utility is a LabVIEW program used to configure an Axis"
" 206, M1011 or M1013 camera for use on the robot. The tool takes a factory "
"reset camera connected directly to the computer and configures the IP, "
"username and password, anonymous access, and default framerate and "
"compression (for use with the SmartDashboard or other access methods). The "
"Setup Axis Camera tool is installed as part of the FRC Game Tools."
msgstr ""
"La aplicación Setup Axis Camera utility es un programa de LabVIEW usado para"
" configurar una cámara Axis 206, M1011 o M1013 para usarla en el robot. La "
"herramienta toma una cámara de restablecimiento conectada directamente a la "
"computadora y configura la IP, nombre de usuario y contraseña, accesos "
"anónimos, fotogramas por segundo y compresión preestablecidos (para usarlos "
"con la SmartDashboard u otro método de acceso). La Configuración de la "
"Cámara Axis está instalada como parte de las Herramientas de Juego de FRC."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:86
msgid "FRC Driver Station Log Viewer (Windows Only)"
msgstr "Visor de Registro de la Driver Station para FRC (Sólo para Windows) "

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:90
msgid ""
"The FRC Driver Station Log Viewer is a LabVIEW program used to view logs "
"created by the FRC Driver Station. These logs contain information such as "
"battery voltage, trip time, CPU% and robot mode, as well as events such as "
"joystick removal. The FRC Driver Station Log Viewer is included in the FRC "
"Game Tools. Installation instructions can be found :ref:`here <docs/zero-to-"
"robot/step-2/frc-game-tools:Installing the FRC Game Tools>`. More "
"information about the FRC Driver Station Log Viewer and understanding the "
"logs can be found :ref:`here <docs/software/driverstation/driver-station-"
"log-viewer:Driver Station Log File Viewer>`"
msgstr ""
"FRC Driver Station Log Viewer es un programa de LabVIEW usado para ver "
"registros creados por la FRC Driver Station. Estos registros contienen "
"información como el voltaje de la batería, hora del viaje, CPU% y el modo "
"del robot, como eventos como la extracción del joystick. FRC Driver Station "
"Log Viewer está incluida en las Herramientas de Juego de FRC. Instrucciones "
"de instalación pueden ser encontradas :ref:`aquí <docs/zero-to-robot/step-2"
"/frc-game-tools:Installing the FRC Game Tools>`. Más información sobre FRC "
"Driver Station Log Viewer y entender los registros se puede encontrar "
":ref:`aquí <docs/software/driverstation/driver-station-log-viewer:Driver "
"Station Log File Viewer>`"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:93
msgid "RobotBuilder"
msgstr "RobotBuilder"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:97
msgid ""
"RobotBuilder is a tool designed to aid in setup and structuring of a Command"
" Based robot project for C++ or Java. RobotBuilder allows you to enter in "
"the various components of your robot subsystems and operator interface and "
"define what your commands are in a graphical tree structure. RobotBuilder "
"will then verify that you have no port allocation conflicts and can generate"
" a wiring table indicating what is connected to each port as well as C++ or "
"Java code. The code created generates the appropriate files, constructs the "
"appropriate objects and adds LiveWindow code for each sensor and actuator, "
"but does not write any of the actual Subsystem or Command methods. The user "
"must write the appropriate code for these methods for the robot to function."
" More information about RobotBuilder can be found :ref:`here <docs/software"
"/wpilib-tools/robotbuilder/index:RobotBuilder>`. More information about the "
"Command Based programming architecture can be found :ref:`here "
"<docs/software/commandbased/index:Command-Based Programming>`."
msgstr ""
"RobotBuilder es una herramienta diseñada para ayudar en la configuración y "
"estructuración de un proyecto de robot basado en comandos para C++ o Java. "
"RobotBuilder le permite ingresar en los diferentes componentes de los "
"subsistemas de su robot e interfaz de su operador y definir cuáles son sus "
"comandos en una estructura gráfica. RobotBuilder verificará que no tenga "
"conflictos de asignación de puertos y puede generar una tabla de cableado "
"indicando lo que está conectado a cada puerto, así como el código de C++ o "
"Java. El código creado genera los archivos apropiados, construye los objetos"
" adecuados y agrega un código de LiveWindow para cada sensor y actuador, "
"pero no escribe nada de los métodos actuales de Subsistemas o Comandos. El "
"usuario debe escribir el código para estos métodos para que el robot "
"funcione. Más información acerca de RobotBuilder puede ser encontrada "
":ref:`aquí<docs/software/wpilib-tools/robotbuilder/index:RobotBuilder>`. "
"Puede encontrar más información sobre la la programación basada en comandos "
":ref:`aquí<docs/software/commandbased/index:Command-Based Programming>"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:100
msgid "OutlineViewer"
msgstr "OutlineViewer"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:104
msgid ""
"OutlineViewer is a utility used to view, modify and add to the contents of "
"the NetworkTables for debugging purposes. It displays all key value pairs "
"currently in the NetworkTables and can be used to modify the value of "
"existing keys or add new keys to the table. OutlineViewer is included in the"
" C++ and Java language updates (found in ``\\tools\\wpilib``). Teams may "
"need to install the Java Runtime Environment to use the OutlineViewer on "
"computers not set up for Java programming."
msgstr ""
"OutlineViewer es una utilidad que se utiliza para ver, modificar y agregar "
"al contenido de NetworkTables con fines de depuración. Muestra todos los "
"pares clave-valor que se encuentran actualmente en NetworkTables y se puede "
"utilizar para modificar el valor de claves existentes o agregar claves "
"nuevas a la tabla. OutlineViewer está incluido en las actualizaciones de los"
" lenguajes C ++ y Java (que se encuentran en ``\\tools\\wpilib``). Es "
"posible que los equipos deban instalar Java Runtime Environment para "
"utilizar OutlineViewer en equipos que no estén configurados para la "
"programación Java."

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:106
msgid ""
"To connect to your robot, open OutlineViewer and set the “Server Location” "
"to be your team number. After you click start, OutlineViewer will connect."
msgstr ""
"Para conectarse a su robot, abra OutlineViewer y configure la “Localización "
"del Servidor” para que sea el número de su equipo. Después de darle clic en "
"empezar, OutlineViewer se conectará. "

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:108
msgid ""
"LabVIEW teams can use the Variables tab of the LabVIEW Dashboard to "
"accomplish this functionality."
msgstr ""
"Los equipos que usen LabVIEW pueden usar la pestaña de Variables de la "
"Dashboard de LabVIEW para lograr esta funcionalidad. "

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:111
msgid "FRC Radio Configuration Utility (Windows Only)"
msgstr "Utilidad de Configuración de Red para FRC (Sólo para Windows)"

#: ../../frc-docs/source/docs/controls-overviews/control-system-software.rst:115
msgid ""
"The FRC Radio Configuration Utility is a tool used to configure the the "
"OpenMesh OM5P-AN or OM5P-AC radio for practice use at home. This tool sets "
"the appropriate IP, and network settings for proper network connection, as "
"well as the QOS settings required to mimic the bandwidth limiting and packet"
" prioritization experience on the FRC playing field. The FRC Radio "
"Configuration Utility is installed by a standalone installer, instructions "
"on installing and using the FRC Radio Configuration Utility to configure "
"your radio can be found :ref:`here <docs/zero-to-robot/step-3/radio-"
"programming:Programming your Radio>`."
msgstr ""
"La FRC Radio Configuration Utility es una herramienta que se utiliza para "
"configurar la radio OpenMesh OM5P-AN o OM5P-AC para uso práctico en casa. "
"Esta herramienta establece la IP apropiada y la configuración de red para "
"una conexión de red adecuada, así como la configuración de QOS requerida "
"para imitar la experiencia de limitación de ancho de banda y priorización de"
" paquetes en el campo de juego de FRC. La Utilidad de Configuración de la "
"radio de FRC es instalada por un instalador único, las instrucciones para "
"instalar y usar la Utilidad de Configuración de la radio de FRC para "
"configurar su radio se pueden encontrar :ref:`aquí <docs/zero-to-"
"robot/step-3/radio-programming:Programming your Radio>`."
